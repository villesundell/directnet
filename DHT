Hash commands are sent along the hash table identified by the first parameter
to the node with the nearest encryption to the encryption key in the second
parameter.

Returnable hash commands also have the taken thusfar in the third parameter.

Hash return messages have a route, like route messages, but do not have the
sending user as a parameter, but instead have the hash table identifier.

[HTI = hash table identifier]
[Keys as used by the DHT are SHA-256'd from the desired data to look up
(whether an encryption key, name, or anything else)]
[None of this is implemented yet]

Hst(1)(1) (hash set)
        purpose: set a value in the distributed hash
        type: hash
        parameters:
                immediate route
                local name
                HTI
                key
                value
                ttl [not currently used]

Had(1)(1) (hash add)
        purpose: add a value to a list of values currently assigned in the distributed hash
        type: hash
        parameters:
                immediate route
                local name
                HTI
                key
                value
                ttl [not currently used]

Hg1(1)(1) (hash get 1st)
        purpose: get the first value for a key
        type: returnable hash
        parameters:
                immediate route
                local name
                HTI
                key
                route

Hr1(1)(1) (hash return 1st)
        purpose: response to Hg1
        type: hash return
        parameters:
                route
                HTI
                key
                value

Hgr(1)(1) (hash get random)
        purpose: get any value for a key
        type: returnable hash
        parameters:
                HTI
                key
                route

Hrr(1)(1) (hash return random)
        purpose: response to Hgr
        type: hash return
        parameters:
                route
                HTI
                key
                value

Hga(1)(1) (hash get all)
        purpose: get all values for a key
        type: returnable hash
        parameters:
                HTI
                key
                route

Hra(1)(1) (hash get all)
        purpose: response to Hga
        type: hash return
        parameters:
                route
                local name
                HTI
                key
                values (in the same form as parameters in messages)

Hfn(1)(1) (hash find)
        purpose: find a route to the user with the given encryption key
        type: returnable hash
        parameters:
                immediate route
                local name
                HTI
                key
                route
                encryption key
                type
                        first byte: 0 for regular search, 1 for positive
                        division, 2 for negative division, 3 for search for
                        successors and predecessors
                        second byte (for divisions): the level of division (0-
                        255)

Hfr(1)(1) (hash find response)
        purpose: reply to Hfn
        type: hash return
        parameters:
                route
                local name
                HTI
                encryption key
                type
                        first byte: 0 for regular search response, 1 for
                        positive division response, 2 for negative division
                        response, 3 for first successor, 4 for second
                        successor, 5 for first predecessor, 6 for second
                        predecessor
                        second byte (for divisions): the level of division (0-
                        255)

Hin(1)(1) (hash table info)
        purpose: tell the remote node what hash table(s) this node is on
        type: direct
        parameters:
                list of HTIs (in the same form as routes)

Hir(1)(1) (hash table info response)
        purpose: equal response to Hin
        type: direct
        parameters:
                list of HTIs (in the same form as routes)
